{
  "x-generator": "NSwag v13.6.2.0 (NJsonSchema v10.1.23.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "AspNetCoreNuxt.Applications.WebHost",
    "version": "1.0.0"
  },
  "paths": {
    "/api/versioning": {
      "get": {
        "tags": [
          "Versioning"
        ],
        "summary": "アプリケーションのバージョン情報を取得します。",
        "operationId": "Versioning_Get",
        "responses": {
          "200": {
            "description": "AppVersion オブジェクト。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppVersion"
                }
              }
            }
          }
        }
      }
    },
    "/api/users": {
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "指定されたユーザー ID のコレクションをもとにユーザー情報を非同期に削除します。",
        "operationId": "Users_Delete",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "default": "1.0"
          },
          {
            "name": "ids",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "ユーザー ID のコレクション。",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "integer",
                "format": "int32"
              }
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Task オブジェクト。"
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "指定された情報をもとにページングされたユーザー情報のコレクションを非同期に取得します。",
        "operationId": "Users_Get",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "default": "1.0"
          },
          {
            "name": "name",
            "in": "query",
            "description": "ユーザー名を取得または設定します。",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "email",
            "in": "query",
            "description": "メールアドレスを取得または設定します。",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "birthday",
            "in": "query",
            "description": "生年月日を取得または設定します。",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "gender",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "性別のコレクションを取得または設定します。",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            },
            "x-position": 4
          },
          {
            "name": "role",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "ロールのコレクションを取得または設定します。",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            },
            "x-position": 5
          },
          {
            "name": "sort",
            "in": "query",
            "description": "並び替え方向を取得または設定します。",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "sort-direction",
            "in": "query",
            "description": "並び替えのキーとなるプロパティの名前を取得または設定します。",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "index",
            "in": "query",
            "description": "1 から始まるページインデックスを取得または設定します。",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 8
          },
          {
            "name": "size",
            "in": "query",
            "description": "ページングサイズを取得します。",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 9
          },
          {
            "name": "fields",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "取得する項目のプロパティを示す文字列のコレクション。",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            },
            "x-position": 10
          }
        ],
        "responses": {
          "200": {
            "description": "IPagination`1 オブジェクト。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPaginationOfUser"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "指定された情報をもとにユーザー情報を非同期に登録します。",
        "operationId": "Users_Post",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "default": "1.0"
          }
        ],
        "requestBody": {
          "x-name": "model",
          "description": "ユーザーの登録情報を表す UserCreateModel オブジェクト。",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "IActionResult オブジェクト。",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}": {
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "指定されたユーザー ID をもとにユーザー情報を非同期に削除します。",
        "operationId": "Users_Delete2",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "default": "1.0"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ユーザー ID。",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Task オブジェクト。"
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "指定されたユーザー ID をもとにユーザー情報を非同期に取得します。",
        "operationId": "Users_GetById",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "default": "1.0"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ユーザー ID。",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "fields",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "取得する項目のプロパティを示す文字列のコレクション。",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "User オブジェクト。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "指定された情報をもとにユーザー情報を非同期に更新します。",
        "operationId": "Users_Patch",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "default": "1.0"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ユーザー ID。",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "model",
          "description": "ユーザーの更新情報を表す UserUpdateModel オブジェクト。",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateModel"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "IActionResult オブジェクト。",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}/password": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "指定された情報をもとにユーザーのパスワードを非同期に更新します。",
        "operationId": "Users_Password",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "default": "1.0"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ユーザー ID。",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "model",
          "description": "ユーザーのパスワードの更新情報を表す UserUpdatePasswordModel オブジェクト。",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdatePasswordModel"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "IActionResult オブジェクト。",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/seeds": {
      "post": {
        "tags": [
          "Seeds"
        ],
        "summary": "シードデータを非同期に登録します。",
        "operationId": "Seeds_Post",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Task オブジェクト。"
          }
        }
      }
    },
    "/api/roles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "ロール情報のコレクションを非同期に取得します。",
        "operationId": "Roles_Get",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "TextValuePair`1 オブジェクトのコレクション。",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TextValuePairOfInteger"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/metadata": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "エンティティのメタデータを取得します。",
        "operationId": "Metadata_Get",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "IDictionary`2 オブジェクト。",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/metadata/{name}": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "指定された名前のエンティティのメタデータを取得します。",
        "operationId": "Metadata_Get2",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "default": "1.0"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "エンティティの名前。",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "IDictionary`2 オブジェクト。",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/initializations/initialize": {
      "get": {
        "tags": [
          "Initializations"
        ],
        "summary": "アプリケーションの初期処理を実行します。",
        "operationId": "Initializations_Initialize",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Task オブジェクト。"
          }
        }
      }
    },
    "/api/enumerations": {
      "get": {
        "tags": [
          "Enumerations"
        ],
        "summary": "列挙体の表示名と値のコレクションを取得します。",
        "operationId": "Enumerations_Get",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "IDictionary`2 オブジェクトのコレクション。",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/enumerations/{name}": {
      "get": {
        "tags": [
          "Enumerations"
        ],
        "summary": "指定された名前の列挙体の表示名と値のコレクションを取得します。",
        "operationId": "Enumerations_GetAll",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "default": "1.0"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "列挙体の名前。",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "IDictionary`2 オブジェクトのコレクション。",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TextValuePairOfInteger"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/addresses": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "指定された郵便番号に紐づく住所を非同期に取得します。",
        "description": "郵便番号データ配信サービス zip-cloud は CORS が許可されていないため API アクセスをプロキシします。",
        "operationId": "Addresses_Get",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "default": "1.0"
          },
          {
            "name": "code",
            "in": "query",
            "description": "7 桁の郵便番号、もしくはハイフンを含む 8 桁の郵便番号。",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "郵便番号に紐づく住所。",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/account": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "認証されているアカウントの情報を取得します。",
        "operationId": "Account_Get",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "アカウントの情報を表す AccountIdentity オブジェクト。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountIdentity"
                }
              }
            }
          }
        }
      }
    },
    "/api/account/sign-in": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "指定された認証情報をもとに認証チケットを発行します。",
        "operationId": "Account_SignIn",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "default": "1.0"
          }
        ],
        "requestBody": {
          "x-name": "credentials",
          "description": "認証情報を表す Credentials オブジェクト。",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Credentials"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "SignInResult オブジェクト。",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/account/sign-out": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "認証チケットを破棄します。",
        "operationId": "Account_SignOut",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "SignOutResult オブジェクト。",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AppVersion": {
        "type": "object",
        "description": "アプリケーションのバージョンを表します。",
        "additionalProperties": false,
        "properties": {
          "apiVersion": {
            "type": "string",
            "description": "API バージョンを取得または設定します。",
            "nullable": true
          },
          "spaVersion": {
            "type": "string",
            "description": "SPA バージョンを取得または設定します。",
            "nullable": true
          }
        }
      },
      "IPaginationOfUser": {
        "type": "object",
        "description": "ページングされたコレクション情報を表します。",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "currentPageIndex": {
            "type": "integer",
            "description": "1 から始まる現在のページインデックスを取得します。",
            "format": "int32"
          },
          "currentPageItems": {
            "type": "array",
            "description": "現在のページの要素のコレクションを取得します。",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "currentPageSize": {
            "type": "integer",
            "description": "現在のページングサイズを取得します。",
            "format": "int32"
          },
          "totalItemCount": {
            "type": "integer",
            "description": "要素数を取得します。",
            "format": "int32"
          },
          "totalPageCount": {
            "type": "integer",
            "description": "ページ数を取得します。",
            "format": "int32"
          }
        }
      },
      "User": {
        "type": "object",
        "description": "ユーザーを表します。",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "ユーザー ID を取得します。",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "ユーザー名を取得します。",
            "nullable": true
          },
          "profile": {
            "description": "プロフィールを取得します。",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserProfile"
              }
            ]
          },
          "roles": {
            "type": "array",
            "description": "ロールのコレクションを取得します。",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/UserRole"
            }
          }
        }
      },
      "UserProfile": {
        "type": "object",
        "description": "ユーザーのプロフィールを表します。",
        "additionalProperties": false,
        "properties": {
          "emailAddress": {
            "type": "string",
            "description": "メールアドレスを取得します。",
            "nullable": true
          },
          "birthday": {
            "type": "string",
            "description": "生年月日を取得します。",
            "format": "date-time",
            "nullable": true
          },
          "gender": {
            "description": "性別を取得します。",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Gender"
              }
            ]
          }
        }
      },
      "Gender": {
        "type": "integer",
        "description": "性別を表します。",
        "x-enumNames": [
          "None",
          "Male",
          "Female"
        ],
        "enum": [
          0,
          1,
          2
        ]
      },
      "UserRole": {
        "type": "object",
        "description": "ユーザーのロールを表します。",
        "additionalProperties": false,
        "properties": {
          "roleId": {
            "type": "integer",
            "description": "ロール ID を取得します。",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "UserUpdateModel": {
        "type": "object",
        "description": "ユーザーの更新情報を表します。",
        "additionalProperties": false,
        "properties": {
          "emailAddress": {
            "type": "string",
            "description": "メールアドレスを取得または設定します。",
            "nullable": true
          },
          "birthday": {
            "type": "string",
            "description": "生年月日を取得または設定します。",
            "format": "date-time",
            "nullable": true
          },
          "gender": {
            "description": "性別を取得または設定します。",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Gender"
              }
            ]
          },
          "roles": {
            "type": "array",
            "description": "ロールのコレクションを取得または設定します。",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "UserUpdatePasswordModel": {
        "type": "object",
        "description": "ユーザーのパスワードの更新情報を表します。",
        "additionalProperties": false,
        "properties": {
          "currentPassword": {
            "type": "string",
            "description": "現在のパスワードを取得または設定します。",
            "nullable": true
          },
          "newPassword": {
            "type": "string",
            "description": "新しいパスワードを取得または設定します。",
            "nullable": true
          }
        }
      },
      "UserCreateModel": {
        "type": "object",
        "description": "ユーザーの登録情報を表します。",
        "additionalProperties": false,
        "properties": {
          "userName": {
            "type": "string",
            "description": "ユーザー名を取得または設定します。",
            "nullable": true
          },
          "password": {
            "type": "string",
            "description": "パスワードを取得または設定します。",
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "description": "メールアドレスを取得または設定します。",
            "nullable": true
          },
          "birthday": {
            "type": "string",
            "description": "生年月日を取得または設定します。",
            "format": "date-time",
            "nullable": true
          },
          "gender": {
            "description": "性別を取得または設定します。",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Gender"
              }
            ]
          },
          "roles": {
            "type": "array",
            "description": "ロールのコレクションを取得または設定します。",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "TextValuePairOfInteger": {
        "type": "object",
        "description": "テキストと値のペアを表します。",
        "additionalProperties": false,
        "properties": {
          "text": {
            "type": "string",
            "description": "テキストを取得または設定します。",
            "nullable": true
          },
          "value": {
            "type": "integer",
            "description": "値を取得または設定します。",
            "format": "int32"
          }
        }
      },
      "AccountIdentity": {
        "type": "object",
        "description": "アカウントの情報を表します。",
        "additionalProperties": false,
        "properties": {
          "userName": {
            "type": "string",
            "description": "ユーザー名を取得または設定します。",
            "nullable": true
          },
          "permissions": {
            "type": "object",
            "description": "権限を表す Permission 値をキーとしたコレクションを取得または設定します。",
            "nullable": true,
            "additionalProperties": {
              "type": "boolean"
            }
          }
        }
      },
      "Credentials": {
        "type": "object",
        "description": "認証情報を表します。",
        "additionalProperties": false,
        "properties": {
          "userName": {
            "type": "string",
            "description": "ユーザー名を取得または設定します。",
            "nullable": true
          },
          "password": {
            "type": "string",
            "description": "パスワードを取得または設定します。",
            "nullable": true
          }
        }
      }
    }
  }
}